// Generated by CoffeeScript 1.9.0
(function() {
  var app;

  app = angular.module("MerlinChat");

  app.filter("contactList", function() {
    return function(contacts) {
      var contact, contactList, key;
      contactList = {};
      for (key in contacts) {
        contact = contacts[key];
        if (contact.status !== 'offline' || xmpp.messages[key] !== void 0) {
          contactList[key] = contact;
        }
      }
      return contactList;
    };
  });

  app.filter("name", function() {
    var maxsize;
    maxsize = 13;
    return function(name) {
      if (name.length > maxsize) {
        name = name.substr(0, maxsize - 1);
        name = name + '..';
      }
      return name;
    };
  });

  app.controller("dashboardController", function($scope, $rootScope) {
    var calculatedHeight, maxHeight;
    $scope.activeChat = false;
    $scope.activeJid = "";
    maxHeight = window.innerHeight;
    calculatedHeight = 120 + 80 + angular.element('.text-box-container').height();
    angular.element('.sidebar .scroller').css('height', (maxHeight - 57) + 'px');
    angular.element('.box .scroller').css('height', (maxHeight - calculatedHeight) + 'px');
    $scope.logout = function() {
      xmpp.disconnect();
    };
    $scope.streamInput = "";
    angular.element('textarea#streamInput').bind('change', function() {
      $scope.forceAdjust();
    });
    angular.element('textarea#streamInput').bind('keydown', function() {
      $scope.forceAdjust();
    });
    angular.element('textarea#streamInput').bind('keyup', function() {
      $scope.forceAdjust();
    });
    $scope.forceAdjust = function() {
      calculatedHeight = 120 + 80 + angular.element('.text-box-container').height();
      if (maxHeight - calculatedHeight > 100) {
        angular.element('.box .scroller').css('height', (maxHeight - calculatedHeight) + 'px');
      }
    };
    $scope.$watch("streamInput", function(newValue, oldValue) {
      $scope.forceAdjust();
    });
    $scope.selectBuddy = function(jid) {
      var oldjid;
      $scope.activeChat = true;
      oldjid = $scope.activeJid;
      $scope.activeJid = jid;
      if (!$scope.$$phase) {
        $scope.$apply();
      }
      if (oldjid !== jid) {
        $(".box-container .scroller").scrollTop(0);
      }
      $(".box-container .scroller").scrollTop($('.box-container .box-content').height());
      $(".box-container .scroller").perfectScrollbar('update');
      angular.element('textarea#streamInput').focus();
    };
    $scope.getSelfPhoto = function() {
      return xmpp.photo;
    };
    $scope.getSelfName = function() {
      if (xmpp.fullName.length > 0) {
        return xmpp.fullName;
      } else {
        return xmpp.jid;
      }
    };
    xmpp.fetchSelfVcard();
  });

  app.controller("consoleController", function($scope, $rootScope) {
    $scope.$on("streamIncoming", function(event, body) {
      $scope.show_traffic(body.body, 'out');
    });
    $scope.$on("streamOutgoing", function(event, body) {
      $scope.show_traffic(body.body, 'out');
    });
    xmpp.conn.xmlInput = function(body) {
      $rootScope.$broadcast("streamIncoming", {
        body: body
      });
    };
    xmpp.conn.xmlOutput = function(body) {
      $rootScope.$broadcast("streamOutgoing", {
        body: body
      });
    };
    $scope.consoleLogs = [];
    $scope.show_traffic = function(body, type) {
      $scope.consoleLogs.push({
        body: Strophe.serialize(body),
        type: type
      });
      if (!$scope.$$phase) {
        $scope.$apply();
      }
    };
    $scope.streamInput = '';
    $scope.sendStream = function() {
      var text;
      text = $scope.streamInput;
      if (text.length > 0) {
        xmpp.sendFromText(text);
      }
    };
  });

}).call(this);
